<html>
<head>
    <title>Capture picture from your webcam</title>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/webcamjs/1.0.25/webcam.js"></script>
<style>
body {
  background-color: black;
  color: white;
}
  img {
  border: 1px solid white;
      border-radius: 50%;
    opacity: .60;
    transition: opacity .5s ease-in-out;
  }
  img:hover {
    opacity: 1;
  }
    html {
  --text-color-normal: #0a244d;
  --text-color-light: #8cabd9;
}

body {
  --text-color-normal: hsl(210, 10%, 62%);
  --text-color-light: hsl(210, 15%, 35%);
  --text-color-richer: hsl(210, 50%, 72%);
  --text-color-highlight: hsl(25, 70%, 45%);
}
#menu {
     margin: 0;
     width: auto;
     background-color: #565656;
     font-size: 16px;
     font-family: Tahoma, Geneva, sans-serif;
     font-weight: bold;
     text-align: left;
     padding: 8px;
     border-radius: 8px;
     -webkit-border-radius: 8px;
     -moz-border-radius: 8px;
     -o-border-radius: 8px;
}

#menu ul {
     margin: 0;
     padding: 8px 0;
     list-style: none;
     height: auto;
}

#menu li {
     display: inline;
     padding: 8px;
}

#menu a {
     color: #FFF;
     padding: 10px;
     text-decoration: none;
}

#menu a:hover {
     background-color: #1B191B;
     color: #FFF;
     border-radius: 20px;
     -webkit-border-radius: 20px;
     -moz-border-radius: 20px;
     -o-border-radius: 20px;
}

#menu li .active {
     background-color: #1B191B;
     color: #FFF;
     border-radius: 20px;
     -webkit-border-radius: 20px;
     -moz-border-radius: 20px;
     -o-border-radius: 20px;
}



/* Style the tab */
.tab {
  overflow: hidden;
  border: 1px solid #ccc;
  background-color: #f1f1f1;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Style the buttons inside the tab */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  font-size: 17px;
  margin: 0 auto;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #ddd;
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: #ccc;
}

/* Style the tab content */
.tabcontent {
  display: none;
  padding: 6px 12px;
  border: 1px solid #ccc;
  border-top: none;
}

#demo img{
border: 1px solid white;
      border-radius: 5%;
    opacity: .60;
    transition: opacity .5s ease-in-out;
    height:50px;
    width:50px;
}

</style>

</head>

<body>


<div id="menu">
     <ul>
          <li><a href="/" >SnapShot</a></li>
          <li><a href="#" class="active">Real-time</a></li>
     </ul>
</div>

<!----guide tab---->
<div>

    <h2 style="text-align: center">Emotion</h2>
<p style="text-align: center">Click on the emotion below to view an example to assist you:</p>

<div class="tab">
  <button class="tablinks" onclick="openCity(event, 'Neutral')" style="display: inline-block;">Important</button>
  <button class="tablinks" onclick="openCity(event, 'Happiness')" style="display: inline-block;">Happiness</button>
  <button class="tablinks" onclick="openCity(event, 'Sadness')" style="display: inline-block;">Sadness</button>
  <button class="tablinks" onclick="openCity(event, 'Surprise')" style="display: inline-block;">Surprise</button>
  <button class="tablinks" onclick="openCity(event, 'Disgust')" style="display: inline-block;">Disgust</button>
  <button class="tablinks" onclick="openCity(event, 'Fear')" style="display: inline-block;">Fear</button>
  <button class="tablinks" onclick="openCity(event, 'Anger')" style="display: inline-block;">Anger</button>
  <button class="tablinks" onclick="openCity(event, 'Contempt')" style="display: inline-block;">Contempt</button>
</div>

<div id="Neutral" class="tabcontent">
  <h2>Neutral</h2>
    <p>We can currently classify emotions from the following categories 'neutral', 'happiness', 'sadness', 'surprise', 'fear', 'disgust', 'anger', 'contempt', 'none', 'unknown' and 'No Face'.</p>
    <p>Please take a snapshot below with normal expressions or select an emotion above to view an example of a emotion and proceed with the required expression below:</p>
    <br>
    <h3>Note:</h3>
    <ul>
        <li><p>This model was trained for 78 iterations on 0.5 million images.</p></li>
        <li><p>Though this model has achieved real world deployment ready accuracies, but still this is a demo model and have a room for improvement.</p></li>
    </ul>
    <h4>Scope of improvement/Proposed improvements (although performance criteria has already been met):</h4>
    <ul>
    <li>Further more data (Already identified) with people from various demographics and diversity of emotions can be incorporated in the model.</li>
    <li>Model was trained on image size of 48x48 under resource constraint which is quite small and final model can be prepared on images with higher resolution.</li>
    <li>This is a one step model, however a two step ensemble model architecture can offer even better results.</li>
    <li>Further balancing of data can be done.</li>
    <li>A larger model can be opted for training the data once computing resources are available.</li>
    <li>Inference time can further be reduced on a dedicated server.</li>
</div>

<div id="Happiness" class="tabcontent">
  <h3>Happiness</h3>
  <img src="https://www.askideas.com/media/24/Obama-Funny-Smiley-Face-Picture.jpg" style="border: 1px solid white;border-radius: 5%;opacity: 1; height:200px;width:auto">
</div>

<div id="Sadness" class="tabcontent">
  <h3>Sadness</h3>
  <img src="https://methodicalinsanity.files.wordpress.com/2015/06/sadness.jpg" style="border: 1px solid white;border-radius: 5%;opacity: 1; height:200px;width:auto">
</div>

<div id="Surprise" class="tabcontent">
  <h3>Surprise</h3>
    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQVomhpVcVUipOjJxdpX1YzLIEHIT-wdrwZt9WPWMDp-cEN2Vvp" style="border: 1px solid white;border-radius: 5%;opacity: 1; height:200px;width:auto">
</div>

<div id="Disgust" class="tabcontent">
  <h3>Disgust</h3>
  <img src="https://media.istockphoto.com/photos/facial-expressions-of-young-black-woman-on-brick-wall-picture-id962908052?k=6&m=962908052&s=612x612&w=0&h=dmx1I-Agg4VIU2BryWzGTJ7YKWNFDPXd-4rGdYLNQ68=" style="border: 1px solid white;border-radius: 5%;opacity: 1; height:200px;width:auto">
</div>

<div id="Fear" class="tabcontent">
  <h3>Fear</h3>
  <img src="http://clipart-library.com/images/8i65eakAT.jpg" style="border: 1px solid white;border-radius: 5%;opacity: 1; height:200px;width:auto">
</div>

 <div id="Anger" class="tabcontent">
  <h3>Anger</h3>
  <img src="https://cdn.hswstatic.com/gif/anger-how-3.jpg" style="border: 1px solid white;border-radius: 5%;opacity: 1; height:200px;width:auto">
</div>

<div id="Contempt" class="tabcontent">
  <h3>Contempt</h3>
  <img src="https://i.pinimg.com/originals/cc/be/27/ccbe276dbbbe03fe93eb68a30b84466b.jpg" style="border: 1px solid white;border-radius: 5%;opacity: 1; height:200px;width:auto">
</div>

</div>
<!----guide tab---->

    <div id="camera" style="margin:0 auto;height:auto;width:auto; text-align:center;border: 1px solid white;border-radius: 4px;padding: 5px;"></div>
    <div style="margin:0 auto;height:auto;width:auto; text-align:center;margin-top:25px">
    <!--FOR THE SNAPSHOT-->
    <input type="button" value="Real-Time Analysis" id="btPic" onclick="takeSnapShot()" />
    <p id="snapShot"></p>
    </div>
</body>

<script>
    // CAMERA SETTINGS.
    Webcam.set({
        width: 440,
        height: 331,
        image_format: 'jpeg',
        jpeg_quality: 100
    });
    Webcam.attach('#camera');

    // SHOW THE SNAPSHOT.
    takeSnapShot = function () {
        Webcam.snap(function (data_uri) {
        var xhr = new XMLHttpRequest();
xhr.open("POST", "/process", true);
xhr.setRequestHeader('Content-Type', 'application/json');
xhr.send(JSON.stringify({
    value: data_uri
}));
xhr.onload = function() {
  var data = JSON.parse(this.responseText);

            document.getElementById('snapShot').innerHTML =
                '<p>' + data.key + '</p>';
};
        });
    }


</script>
<script>

setInterval(takeSnapShot, 2100);


</script>

<script>
function openCity(evt, cityName) {
  var i, tabcontent, tablinks;
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }
  document.getElementById(cityName).style.display = "block";
  evt.currentTarget.className += " active";
}
</script>
</html>